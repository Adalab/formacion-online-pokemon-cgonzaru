{"version":3,"sources":["components/PokeCard.js","components/PokeList.js","App.js","index.js"],"names":["PokeCard","props","image","name","typeList","className","src","alt","map","type","index","key","PokeList","userInput","api","filter","character","toUpperCase","includes","item","App","state","getUserInput","bind","this","getPokemons","event","newInput","currentTarget","value","setState","fetch","then","response","json","data","results","url","res","pokemon","arrTypes","types","push","pokeInfo","sprites","front_default","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qXA+BeA,G,MA3BE,SAAAC,GAAU,IAClBC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,SACpB,OACE,yBAAKC,UAAU,aACb,yBAAKC,IAAKJ,EAAOK,IAAKJ,EAAME,UAAU,iBACtC,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,iBAAiBF,GAE/B,wBAAIE,UAAU,iBACXD,EACEI,KAAI,SAACC,EAAMC,GACV,OACE,wBAAIL,UAAU,OAAOM,IAAKD,GAAQD,WCgBnCG,G,MA3BE,SAAAX,GAAU,IAClBY,EAAkBZ,EAAlBY,UAAWC,EAAOb,EAAPa,IAClB,OACE,wBAAIT,UAAU,kBACXS,EACEC,QAAO,SAAAC,GAAS,OAAIA,EAAUb,KAAKc,cAAcC,SAASL,EAAUI,kBACpET,KAAI,SAACW,EAAMT,GACV,OACE,wBAAIL,UAAU,gBAAgBM,IAAKD,GACjC,kBAAC,EAAD,CACER,MAAOiB,EAAKjB,MACZC,KAAMgB,EAAKhB,KACXC,SAAUe,EAAKf,kBCsDhBgB,G,kBAlEb,WAAYnB,GAAQ,IAAD,8BACjB,4CAAMA,KAEDoB,MAAQ,CACXP,IAAK,GACLD,UAAW,IAGb,EAAKS,aAAe,EAAKA,aAAaC,KAAlB,gBARH,E,iFAYjBC,KAAKC,gB,mCAGMC,GACX,IAAMC,EAAWD,EAAME,cAAcC,MAErCL,KAAKM,SAAU,CACbjB,UAAWc,M,oCAIA,IAAD,OACZI,MAAM,qCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAS,IAAD,uBACZ,IAAI,IAAJ,IAAgBA,EAAKC,QAArB,+CAA8B,CAAC,IAAvBjB,EAAsB,QAC5BY,MAAMZ,EAAKkB,KACVL,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,UAChBF,MAAK,SAAAO,GACJ,IAAMC,EAAW,GADF,uBAEf,YAAiBD,EAAQE,MAAzB,+CAAgC,CAAC,IAAxBhC,EAAuB,QAC9B+B,EAASE,KAAKjC,EAAKA,KAAKN,OAHX,kFAKf,IAAMwC,EAAW,CACfxC,KAAMoC,EAAQpC,KACdD,MAAQqC,EAAQK,QAAQC,cACxBzC,SAAWoC,GAEb,EAAKV,SAAS,CACZhB,IAAI,GAAD,mBAAM,EAAKO,MAAMP,KAAjB,CAAsB6B,UAfnB,wF,+BAwBd,OACE,yBAAKtC,UAAU,OACb,4BAAQA,UAAU,eAAc,wBAAIA,UAAU,cAAd,yBAChC,0BAAMA,UAAU,aACd,2BAAOI,KAAK,OAAOJ,UAAU,SAASyC,SAAUtB,KAAKF,eACrD,kBAAC,EAAD,CACET,UAAWW,KAAKH,MAAMR,UACtBC,IAAKU,KAAKH,MAAMP,Y,GA1DViC,IAAMC,YCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a8ad055d.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/PokeCard.scss';\nimport PropTypes from 'prop-types';\n\nconst PokeCard = props => {\n  const {image, name, typeList} = props;\n  return (\n    <div className=\"container\">\n      <img src={image} alt={name} className=\"pokemon__img\" />\n      <div className=\"pokemon__info\">\n        <h2 className=\"pokemon__name\">{name}</h2>\n\n        <ul className=\"pokemon__type\">\n          {typeList\n            .map((type, index) => {\n              return (\n                <li className=\"type\" key={index}>{type}</li>\n              );\n            })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nPokeCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  typeList: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default PokeCard;","import React from 'react';\nimport PokeCard from '../components/PokeCard';\nimport '../styles/PokeList.scss';\nimport PropTypes from 'prop-types';\n\nconst PokeList = props => {\n  const {userInput, api} = props;\n  return (\n    <ul className=\"pokemons__list\">\n      {api\n        .filter(character => character.name.toUpperCase().includes(userInput.toUpperCase()))\n        .map((item, index) => {\n          return (\n            <li className=\"pokemon__card\" key={index}>\n              <PokeCard \n                image={item.image}        \n                name={item.name}\n                typeList={item.typeList}    \n              />\n              \n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nPokeList.propTypes = {\n  userInput: PropTypes.string.isRequired,\n  api: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default PokeList;","import React from 'react';\nimport PokeList from './components/PokeList';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      api: [],\n      userInput: ''\n    }\n\n    this.getUserInput = this.getUserInput.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPokemons();\n  }\n\n  getUserInput(event) {\n    const newInput = event.currentTarget.value;\n\n    this.setState ({\n      userInput: newInput\n    })\n  }\n\n  getPokemons() {\n    fetch('https://pokeapi.co/api/v2/pokemon')\n    .then(response => response.json())\n    .then(data => {\n      for(let item of data.results) {\n        fetch(item.url)\n        .then(res => res.json())\n        .then(pokemon => {\n          const arrTypes = [];\n          for (let type of pokemon.types) {\n            arrTypes.push(type.type.name);\n          }\n          const pokeInfo = {\n            name: pokemon.name,\n            image : pokemon.sprites.front_default,\n            typeList : arrTypes\n          }\n          this.setState({\n            api: [...this.state.api, pokeInfo]\n          }) \n        })\n      }\n\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"app__header\"><h1 className=\"app__title\">Mi lista de pokemons</h1></header>\n        <main className=\"app__main\">\n          <input type=\"text\" className=\"search\" onChange={this.getUserInput}/>\n          <PokeList \n            userInput={this.state.userInput}\n            api={this.state.api}\n          />\n          \n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}